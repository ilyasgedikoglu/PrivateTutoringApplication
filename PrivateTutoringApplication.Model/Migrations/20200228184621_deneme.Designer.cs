// <auto-generated />
using System;
using System.Collections.Generic;
using System.Net;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PrivateTutoringApplication.Model.Infrastructure;

namespace PrivateTutoringApplication.Model.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200228184621_deneme")]
    partial class deneme
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.Giris", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EklenmeZamani")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<List<IPAddress>>("IPAddress")
                        .HasColumnType("inet[]");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("character varying(511)")
                        .HasMaxLength(511);

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Giris");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<string>("Ad")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("CVPath")
                        .HasColumnType("text");

                    b.Property<int?>("CinsiyetId")
                        .HasColumnType("integer");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DogumYeri")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<DateTime>("EklenmeZamani")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("EkleyenId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("GraduationStatus")
                        .HasColumnType("text");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Job")
                        .HasColumnType("text");

                    b.Property<string>("KimlikNo")
                        .HasColumnType("character varying(31)")
                        .HasMaxLength(31);

                    b.Property<string>("KullaniciAdi")
                        .HasColumnType("character varying(127)")
                        .HasMaxLength(127);

                    b.Property<string>("Resim")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("School")
                        .HasColumnType("text");

                    b.Property<string>("Sifre")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.Property<string>("Soyad")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("character varying(15)")
                        .HasMaxLength(15);

                    b.Property<string>("TuzlamaDegeri")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("UpperDepartment")
                        .HasColumnType("text");

                    b.Property<string>("UpperSchool")
                        .HasColumnType("text");

                    b.Property<int?>("YetkiId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EkleyenId");

                    b.HasIndex("YetkiId");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("Category")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("Definition")
                        .HasColumnType("text");

                    b.Property<int>("Discount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EklenmeZamani")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Level")
                        .HasColumnType("character varying(127)")
                        .HasMaxLength(127);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.LessonComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("EklenmeZamani")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("LessonId")
                        .HasColumnType("integer");

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("LessonId");

                    b.ToTable("LessonComment");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EklenmeZamani")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.Property<int?>("TutorScheduleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("TutorScheduleId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.TutorLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EklenmeZamani")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("LessonId")
                        .HasColumnType("integer");

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("LessonId");

                    b.ToTable("KullaniciLesson");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.TutorSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EklenmeZamani")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("integer");

                    b.Property<int>("LessonDuration")
                        .HasColumnType("integer");

                    b.Property<int>("LessonId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LessonStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.Property<int>("TutorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("LessonId");

                    b.ToTable("TutorSchedule");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.Yetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("character varying(127)")
                        .HasMaxLength(127);

                    b.Property<string>("Adi")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<bool>("Aktif")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("EklenmeZamani")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Goster")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<bool>("Silindi")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Yetki");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.Giris", b =>
                {
                    b.HasOne("PrivateTutoringApplication.Model.Entity.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.Kullanici", b =>
                {
                    b.HasOne("PrivateTutoringApplication.Model.Entity.Kullanici", "Ekleyen")
                        .WithMany()
                        .HasForeignKey("EkleyenId");

                    b.HasOne("PrivateTutoringApplication.Model.Entity.Yetki", "Yetki")
                        .WithMany()
                        .HasForeignKey("YetkiId");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.LessonComment", b =>
                {
                    b.HasOne("PrivateTutoringApplication.Model.Entity.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrivateTutoringApplication.Model.Entity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.Schedule", b =>
                {
                    b.HasOne("PrivateTutoringApplication.Model.Entity.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrivateTutoringApplication.Model.Entity.TutorSchedule", "TutorSchedule")
                        .WithMany()
                        .HasForeignKey("TutorScheduleId");
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.TutorLesson", b =>
                {
                    b.HasOne("PrivateTutoringApplication.Model.Entity.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrivateTutoringApplication.Model.Entity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrivateTutoringApplication.Model.Entity.TutorSchedule", b =>
                {
                    b.HasOne("PrivateTutoringApplication.Model.Entity.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId");

                    b.HasOne("PrivateTutoringApplication.Model.Entity.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
